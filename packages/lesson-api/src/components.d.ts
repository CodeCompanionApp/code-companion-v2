/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import { CCLesson as CcLesson } from './components/cc-lesson/cc-lesson';

interface HTMLCcLessonElement extends CcLesson, HTMLElement {
}
declare var HTMLCcLessonElement: {
  prototype: HTMLCcLessonElement;
  new (): HTMLCcLessonElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "cc-lesson": HTMLCcLessonElement;
  }
  interface ElementTagNameMap {
      "cc-lesson": HTMLCcLessonElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "cc-lesson": JSXElements.CcLessonAttributes;
      }
  }
  namespace JSXElements {
      export interface CcLessonAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          config?: string
      }
  }
}

import { CCSlide as CcSlide } from './components/cc-slide/cc-slide';

interface HTMLCcSlideElement extends CcSlide, HTMLElement {
}
declare var HTMLCcSlideElement: {
  prototype: HTMLCcSlideElement;
  new (): HTMLCcSlideElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "cc-slide": HTMLCcSlideElement;
  }
  interface ElementTagNameMap {
      "cc-slide": HTMLCcSlideElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "cc-slide": JSXElements.CcSlideAttributes;
      }
  }
  namespace JSXElements {
      export interface CcSlideAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
      }
  }
}

